{
  "meta": {
    "version": "1",
    "type": "dashboard",
    "name": "Logs-Template",
    "description": "template created from dashboard: Logs"
  },
  "content": {
    "data": {
      "type": "dashboard",
      "attributes": {
        "name": "Logs",
        "description": ""
      },
      "relationships": {
        "label": {
          "data": []
        },
        "cell": {
          "data": [
            {
              "type": "cell",
              "id": "09620732f826c000"
            },
            {
              "type": "cell",
              "id": "0962eb9ef5efa000"
            }
          ]
        },
        "variable": {
          "data": []
        }
      }
    },
    "included": [
      {
        "id": "09620732f826c000",
        "type": "cell",
        "attributes": {
          "x": 0,
          "y": 0,
          "w": 12,
          "h": 6
        },
        "relationships": {
          "view": {
            "data": {
              "type": "view",
              "id": "09620732f826c000"
            }
          }
        }
      },
      {
        "id": "0962eb9ef5efa000",
        "type": "cell",
        "attributes": {
          "x": 0,
          "y": 6,
          "w": 12,
          "h": 8
        },
        "relationships": {
          "view": {
            "data": {
              "type": "view",
              "id": "0962eb9ef5efa000"
            }
          }
        }
      },
      {
        "type": "view",
        "id": "09620732f826c000",
        "attributes": {
          "name": "Logs",
          "properties": {
            "shape": "chronograf-v2",
            "type": "table",
            "queries": [
              {
                "text": "import \"strings\"\nimport \"influxdata/influxdb/schema\"\n\n\nfrom(bucket: \"primary\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"logs\")\n  |> schema.fieldsAsCols()\n  |> map(fn: (r) => ({ \n  _time_reverse: -int(v: r._time),\n  _value: \"[\"+strings.substring(end: 10, start: 0, v: string(v: r._time))+ \" \" + strings.substring(end: 19, start: 11, v: string(v: r._time))+\"] [\" + r.level + \"] \" + r.msg\n   }))",
                "editMode": "advanced",
                "name": "",
                "builderConfig": {
                  "buckets": [],
                  "tags": [
                    {
                      "key": "_measurement",
                      "values": [],
                      "aggregateFunctionType": "filter"
                    }
                  ],
                  "functions": [
                    {
                      "name": "mean"
                    }
                  ],
                  "aggregateWindow": {
                    "period": "auto",
                    "fillValues": false
                  }
                }
              }
            ],
            "colors": [
              {
                "id": "base",
                "type": "text",
                "hex": "#ffffff",
                "name": "white",
                "value": 0
              }
            ],
            "tableOptions": {
              "verticalTimeAxis": true,
              "sortBy": {
                "internalName": "_time_reverse",
                "displayName": "_time_reverse",
                "visible": false
              },
              "wrapping": "",
              "fixFirstColumn": false
            },
            "fieldOptions": [
              {
                "internalName": "_start",
                "displayName": "_start",
                "visible": false
              },
              {
                "internalName": "_stop",
                "displayName": "_stop",
                "visible": false
              },
              {
                "internalName": "_time",
                "displayName": "time",
                "visible": false
              },
              {
                "internalName": "_value",
                "displayName": "value",
                "visible": true
              },
              {
                "internalName": "_field",
                "displayName": "_field",
                "visible": false
              },
              {
                "internalName": "_measurement",
                "displayName": "_measurement",
                "visible": false
              },
              {
                "internalName": "_time_reverse",
                "displayName": "_time_reverse",
                "visible": false
              }
            ],
            "timeFormat": "YYYY-MM-DD HH:mm:ss",
            "decimalPlaces": {
              "isEnforced": false,
              "digits": 2
            },
            "note": "",
            "showNoteWhenEmpty": false
          }
        }
      },
      {
        "type": "view",
        "id": "0962eb9ef5efa000",
        "attributes": {
          "name": "Errors",
          "properties": {
            "shape": "chronograf-v2",
            "type": "table",
            "queries": [
              {
                "text": "import \"strings\"\nimport \"influxdata/influxdb/schema\"\n\n\nfrom(bucket: \"primary\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"logs\")\n  |> schema.fieldsAsCols()\n  |> filter(fn: (r) => r.level == \"error\")\n  |> map(fn: (r) => ({ \n  _time_reverse: -int(v: r._time),\n  _value: \"[\"+strings.substring(end: 10, start: 0, v: string(v: r._time))+ \" \" + strings.substring(end: 19, start: 11, v: string(v: r._time))+\"] [\" + r.level + \"] \" + r.msg\n   }))",
                "editMode": "advanced",
                "name": "",
                "builderConfig": {
                  "buckets": [],
                  "tags": [
                    {
                      "key": "_measurement",
                      "values": [],
                      "aggregateFunctionType": "filter"
                    }
                  ],
                  "functions": [
                    {
                      "name": "mean"
                    }
                  ],
                  "aggregateWindow": {
                    "period": "auto",
                    "fillValues": false
                  }
                }
              }
            ],
            "colors": [
              {
                "id": "base",
                "type": "text",
                "hex": "#ffffff",
                "name": "white",
                "value": 0
              }
            ],
            "tableOptions": {
              "verticalTimeAxis": true,
              "sortBy": {
                "internalName": "_time_reverse",
                "displayName": "_time_reverse",
                "visible": false
              },
              "wrapping": "",
              "fixFirstColumn": false
            },
            "fieldOptions": [
              {
                "internalName": "_start",
                "displayName": "_start",
                "visible": false
              },
              {
                "internalName": "_stop",
                "displayName": "_stop",
                "visible": false
              },
              {
                "internalName": "_time",
                "displayName": "time",
                "visible": false
              },
              {
                "internalName": "_value",
                "displayName": "value",
                "visible": true
              },
              {
                "internalName": "_field",
                "displayName": "_field",
                "visible": false
              },
              {
                "internalName": "_measurement",
                "displayName": "_measurement",
                "visible": false
              },
              {
                "internalName": "_time_reverse",
                "displayName": "_time_reverse",
                "visible": false
              }
            ],
            "timeFormat": "YYYY-MM-DD HH:mm:ss",
            "decimalPlaces": {
              "isEnforced": false,
              "digits": 2
            },
            "note": "",
            "showNoteWhenEmpty": false
          }
        }
      }
    ]
  },
  "labels": []
}